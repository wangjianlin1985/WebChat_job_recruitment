<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.SellerMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加商家记录 -->
	<insert id="addSeller" parameterType="seller">
		insert into t_seller(sellerUserName,password,sellerName,sellerPhoto,workContent,workTime,telephone,workAddress,workLicense,scoreValue,shenHeState,addTime) values 
		(#{sellerUserName},#{password},#{sellerName},#{sellerPhoto},#{workContent},#{workTime},#{telephone},#{workAddress},#{workLicense},#{scoreValue},#{shenHeState},#{addTime})
	</insert>

	<!-- 按照查询条件分页查询商家记录 -->
	<select id="querySeller" resultMap="sellerMap" >
		select t_seller.* from t_seller ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="sellerMap" type="seller">
        <id property="sellerUserName" column="sellerUserName" />
    </resultMap>
    
    <!-- 查询最新入住商家记录 -->
	<select id="queryZxSeller" resultMap="sellerMap" >
		select t_seller.* from t_seller ${where} limit 0,#{pageSize}
	</select>
	 
    

    <!-- 按照查询条件查询所有商家记录 -->
	<select id="querySellerList" resultMap="sellerMap" >
		select t_seller.* from t_seller ${where}
	</select>

    <!-- 按照查询条件的商家记录数 -->
	<select id="querySellerCount" resultType="int">
		select count(*) from t_seller ${where}
	</select>

	<!-- 根据主键查询某个商家记录 -->
	<select id="getSeller" parameterType="string" resultMap="sellerMap">
		select * from t_seller where t_seller.sellerUserName = #{sellerUserName}
	</select>
	
	<!-- 根据微信openid查询某个商家记录 -->
	<select id="getSellerByOpenid" parameterType="string" resultMap="sellerMap">
		select * from t_seller where t_seller.openid = #{openid}
	</select>

	<!-- 更新商家记录 -->
	<update id="updateSeller" parameterType="seller">
		update t_seller set password=#{password},sellerName=#{sellerName},sellerPhoto=#{sellerPhoto},workContent=#{workContent},workTime=#{workTime},telephone=#{telephone},workAddress=#{workAddress},workLicense=#{workLicense},scoreValue=#{scoreValue},shenHeState=#{shenHeState},addTime=#{addTime} where sellerUserName = #{sellerUserName}
	</update>

	<!-- 关联商户的微信openid-->
	<update id="updateSellerOpenid" >
		update t_seller set openid=#{openid} where sellerUserName = #{sellerUserName}	
	</update>
	
	
	<!-- 删除商家记录 -->
	<delete id="deleteSeller" parameterType="string">
		delete from t_seller where sellerUserName=#{sellerUserName}
	</delete>

</mapper>
